<?xml version="1.0" encoding="UTF-8" ?>
<!--MyBatis的DTD约束-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    mapper：核心根标签
    namespace属性：名称空间  映射配置文件的namespace属性和映射接口的全限定名一致
-->
<mapper namespace="com.one.dao.UserDao">
    <!--
        select：查询功能的标签
        id属性：唯一标识  映射配置文件的id属性值和映射接口的方法名一致
        resultType属性：指定结果映射对象类型
        parameterType属性：指定参数映射对象类型,如果是多个参数就封装到实体类对象中传递
    -->
    <select id="selectAll" resultMap="customTypeMap">
        SELECT id, username, age, sex, birthday, address FROM User
    </select>
    
    <resultMap id="customTypeMap" type="com.one.pojo.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="sex" property="sex" typeHandler="com.one.handler.SexEnumHandler"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectById" resultType="com.one.pojo.User" parameterType="int">
        SELECT * FROM User WHERE id= #{id}
    </select>

    <insert id="insert" parameterType="com.one.pojo.User">
        INSERT INTO User VALUES (#{id},#{name},#{age},#{birthday})
        ON DUPLICATE KEY UPDATE
        name = values(name), age = values(age), birthday = values(birthday)
    </insert>

    <update id="update" parameterType="com.one.pojo.User">
        UPDATE User SET name=#{name},age=#{age},birthday = #{birthday} WHERE id=#{id}
    </update>

    <delete id="deleteById" parameterType="int">
        DELETE FROM User WHERE id=#{id}
    </delete>

    <!-- 使用mybatis自定义的类型转换器,处理mysql中的json类型字段-->
    <resultMap id="BaseResultMap" type="com.one.pojo.JsonRules" >
        <!--This element is automatically generated by MyBatis Generator, do not modify-->
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="sys_name" property="sysName" jdbcType="VARCHAR" />
        <!--将json类型的rules字段修改为如下形式-->
        <result column="rules" property="rules" typeHandler="com.one.handler.JsonHandler" />
        <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    </resultMap>

    <insert id="insertJsonRules" parameterType="com.one.pojo.JsonRules" >
        <!--This element is automatically generated by MyBatis Generator, do not modify-->
        insert into rules_test (id, sys_name, rules,date)
        values (
        #{id,jdbcType=INTEGER},
        #{sysName,jdbcType=VARCHAR},
        #{rules,jdbcType=OTHER,typeHandler=com.one.handler.JsonHandler},
        #{date,jdbcType=TIMESTAMP})
    </insert>

    <select id="selectJsonRules" parameterType="com.one.pojo.JsonRules" resultMap="BaseResultMap">
        select order_id, order_num, usemessage, goodslist, beizhu, all_price, create_time
        from orders
        <!-- 仅仅按照create_time字段排序不够,出现相同时间在分页的时候回出现错误,后面还得加上主键id   -->
        where userid = #{userid,jdbcType=VARCHAR} ORDER by create_time, order_id desc
    </select>


</mapper>